1. Uruchomienie lokalnie
certy
dotnet dev-certs https --trust

2. Doker (uzupełnić)

3. Kubernates
Instal Docker Desktop
login

kubectl version

3.1 Setup platformservice:
Set DockerFile in proj, check dll name. (file must have name Dockerfile)

docker build -t kmazanek/platformservice .
//Check run
docker run -p 8080:80 kmazanek/commandservice
docker push kmazanek/platformservice
kubectl apply -f platforms-depl.yaml

Force to refresh image:
kubectl rollout restart deployment platforms-depl

3.2 Add node port: 

kubectl apply -f platforms-np-srv.yaml

kubectl get deployments
kubectl get pods
kubectl get services

3.3 Setup commandservice:

docker build -t kmazanek/commandservice .
docker push kmazanek/commandservice
kubectl apply -f commands-depl.yaml

Force to refresh image:
kubectl rollout restart deployment commands-depl

3.4 Setup ngres Ip gateway

Ustawienie:

//https://kubernetes.github.io/ingress-nginx/deploy/#quick-start
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.1/deploy/static/provider/cloud/deploy.yaml

Sprawdzanie:

kubectl get namespace

kubectl get pods --namespace=ingress-nginx

kubectl get services

kubectl get services --namespace=ingress-nginx

Stworzyć kontroler ingress

Plik z jego config ingress-srv.yaml definiuje routing z acme.com

Otwórz plik
C:\Windows\System32\drivers\etc\hosts
w edytorze

dodać wpis
127.0.0.1 acme.com

kubectl apply -f ingress-srv.yaml

Test routes in insomnia
wpisać acme.com w Ip
nie działa
127.0.0.3 acme.com
nie działa
w admin powerShell
NET STOP IISADMIN
nie działa